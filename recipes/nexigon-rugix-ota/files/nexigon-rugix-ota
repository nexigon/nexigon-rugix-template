#!/usr/bin/env bash

set -euo pipefail

if [ "$(id -u)" -ne 0 ]; then
    echo "[ERROR] script must be run as root" >&2
    exit 1
fi

LOCKFILE="/var/lock/nexigon-rugix-ota.lock"

exec 200>"$LOCKFILE"

if ! flock -n 200; then
    echo "[ERROR] another instance of this script is already running" >&2
    exit 1
fi

OTA_CONFIG=$(nexigon-agent device properties get "org.rugix.ota.config")

if [ "$(echo "$OTA_CONFIG" | jq -r '.result')" == "NotFound" ]; then
    echo "[INFO] no device-specific OTA configuration found, using defaults" >&2
    # shellcheck disable=SC1091
    source /etc/nexigon-rugix-ota.conf
    OTA_CONFIG=$(jq -n --arg path "$VERSION_PATH" '{ "path": $path }')
else
    echo "[INFO] device-specific OTA configuration found" >&2
    OTA_CONFIG=$(echo "$OTA_CONFIG" | jq -r '.value')
fi

echo "[INFO] OTA configuration: $OTA_CONFIG"

VERSION_PATH=$(echo "$OTA_CONFIG" | jq -r '.path')

RUGIX_BUILD_INFO=$(cat /etc/rugix/system-build-info.json)

SYSTEM_NAME=$(echo "$RUGIX_BUILD_INFO" | jq -r '.name')
SYSTEM_VERSION=$(echo "$RUGIX_BUILD_INFO" | jq -r '.release.version')

nexigon-agent events emit --category "org.rugix.ota" \
    --attribute "path=$(jq -n --arg path "$VERSION_PATH" '$path')" \
    --attribute "system=$(jq -n --arg system "$SYSTEM_NAME" '$system')" \
    --attribute "version=$(jq -n --arg version "$SYSTEM_VERSION" '$version')" \
    '"checking for updates"'

LATEST_BUILD_INFO_URL=$(nexigon-agent repositories issue-url "$VERSION_PATH/$SYSTEM_NAME.build-info.json" | jq -r '.url')
LATEST_BUILD_INFO=$(curl -sSfL "$LATEST_BUILD_INFO_URL")

LATEST_VERSION=$(echo "$LATEST_BUILD_INFO" | jq -r '.release.version')

if [ "$LATEST_VERSION" == "$SYSTEM_VERSION" ]; then
    echo "[INFO] no updates available" >&2
    nexigon-agent events emit --category "org.rugix.ota" \
        --attribute "version=$(jq -n --arg version "$SYSTEM_VERSION" '$version')" \
        --attribute "latest=$(jq -n --arg version "$LATEST_VERSION" '$version')" \
        '"no update available"'
    exit 0
fi

nexigon-agent events emit --category "org.rugix.ota" \
    --attribute "version=$(jq -n --arg version "$SYSTEM_VERSION" '$version')" \
    --attribute "latest=$(jq -n --arg version "$LATEST_VERSION" '$version')" \
    '"update available"'

RUGIX_SYSTEM_INFO=$(rugix-ctrl system info)

ACTIVE_GROUP=$(echo "$RUGIX_SYSTEM_INFO" | jq -r '.boot.activeGroup')
DEFAULT_GROUP=$(echo "$RUGIX_SYSTEM_INFO" | jq -r '.boot.defaultGroup')

if [ "$ACTIVE_GROUP" != "$DEFAULT_GROUP" ]; then
    echo "[INFO] committing system before update" >&2
    nexigon-agent events emit --category "org.rugix.ota" \
        --attribute "activeGroup=$(jq -n --arg group "$ACTIVE_GROUP" '$group')" \
        --attribute "defaultGroup=$(jq -n --arg group "$DEFAULT_GROUP" '$group')" \
        '"committing system before update"'
    rugix-ctrl system commit
fi

if [ "$ACTIVE_GROUP" == "a" ]; then
    TARGET_GROUP="b"
else
    TARGET_GROUP="a"
fi

echo "[INFO] installing update to group $TARGET_GROUP" >&2

nexigon-agent events emit --category "org.rugix.ota" \
    --attribute "activeGroup=$(jq -n --arg group "$ACTIVE_GROUP" '$group')" \
    --attribute "targetGroup=$(jq -n --arg group "$TARGET_GROUP" '$group')" \
    '"installing update"'

BUNDLE_URL=$(nexigon-agent repositories issue-url "$VERSION_PATH/$SYSTEM_NAME.rugixb" | jq -r '.url')

echo "[INFO] downloading bundle from $BUNDLE_URL" >&2

rugix-ctrl update install --reboot no "$BUNDLE_URL"

nexigon-agent events emit --category "org.rugix.ota" '"update installed, rebooting"'

echo "[INFO] rebooting" >&2

rugix-ctrl system reboot --spare
